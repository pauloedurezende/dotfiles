---
- name: Install zsh via Homebrew
  ansible.builtin.shell: |
    if ! command -v brew >/dev/null 2>&1; then
      echo "Homebrew not found"
      exit 1
    fi
    if ! brew list zsh >/dev/null 2>&1; then
      brew install zsh
    else
      echo "zsh already installed"
    fi
  register: zsh_install_result
  changed_when: "'already installed' not in zsh_install_result.stdout"

- name: Get current shell
  ansible.builtin.shell: echo $SHELL
  register: zsh_current_shell
  changed_when: false

- name: Add Homebrew zsh to /etc/shells
  ansible.builtin.lineinfile:
    path: /etc/shells
    line: /opt/homebrew/bin/zsh
    state: present
  become: true
  when: zsh_set_default_shell

- name: Set zsh as default shell
  ansible.builtin.command: chsh -s /opt/homebrew/bin/zsh
  when:
    - zsh_set_default_shell
    - zsh_current_shell.stdout != "/opt/homebrew/bin/zsh"
  changed_when: true

- name: Clone zinit repository
  ansible.builtin.git:
    repo: "{{ zsh_zinit_repo }}"
    dest: "{{ zsh_zinit_home }}"
    version: main
    force: true
    single_branch: true
  when: zsh_zinit_enabled

- name: Generate zsh configuration
  ansible.builtin.template:
    src: zshrc.j2
    dest: "{{ dotfiles_home }}/.zshrc"
    mode: '0644'
    backup: true
  when: zsh_config_enabled

- name: Install powerlevel10k configuration
  ansible.builtin.copy:
    src: p10k.zsh
    dest: "{{ dotfiles_home }}/.p10k.zsh"
    mode: '0644'
  when:
    - zsh_p10k_enabled
    - zsh_p10k_config_enabled

- name: Create zsh cache directory
  ansible.builtin.file:
    path: "{{ dotfiles_home }}/.cache/zsh"
    state: directory
    mode: '0755'
