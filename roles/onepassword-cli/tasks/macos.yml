---
- name: Check if Homebrew is available
  ansible.builtin.command: which brew
  register: homebrew_check
  changed_when: false
  failed_when: homebrew_check.rc != 0

- name: Install 1Password CLI via Homebrew
  community.general.homebrew_cask:
    name: "1password-cli"
    state: present

- name: Verify 1Password CLI installation
  ansible.builtin.command: op --version
  register: op_version
  changed_when: false
  failed_when: op_version.rc != 0

- name: Create SSH config directory
  ansible.builtin.file:
    path: "{{ dotfiles_home }}/.ssh"
    state: directory
    mode: '0700'
  when: onepassword_ssh_agent_enabled

- name: Apply SSH configuration template
  ansible.builtin.template:
    src: ssh_config.j2
    dest: "{{ dotfiles_home }}/.ssh/config"
    mode: '0600'
    backup: true
  when: onepassword_ssh_agent_enabled and onepassword_ssh_config_enabled

- name: Create 1Password SSH agent config directory
  ansible.builtin.file:
    path: "{{ dotfiles_home }}/.config/1Password/ssh"
    state: directory
    mode: '0755'
  when: onepassword_ssh_agent_enabled and onepassword_ssh_agent_config_enabled

- name: Apply 1Password SSH agent config template
  ansible.builtin.template:
    src: agent.toml.j2
    dest: "{{ dotfiles_home }}/.config/1Password/ssh/agent.toml"
    mode: '0644'
    backup: true
  when: >
    onepassword_ssh_agent_enabled and
    onepassword_ssh_agent_config_enabled and
    vault_onepassword_ssh_key_item_id is defined and
    vault_onepassword_ssh_key_vault_id is defined
  no_log: true

- name: Configure Git to use SSH
  community.general.git_config:
    name: core.sshCommand
    value: ssh
    scope: global
  when: onepassword_ssh_agent_enabled and onepassword_ssh_config_enabled
